<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="store.teabliss.review.mapper.ReviewMapper">

    <insert id="createReview" parameterType="Review">
        INSERT INTO REVIEW (title, contents, likes, tea_id, mem_id)
        VALUES (#{title}, #{contents}, #{likes}, #{teaId}, #{memId})
    </insert>

    <select id="findByAllReview" parameterType="Review" resultType="Review">
        SELECT
            r.review_id as id,
            r.title,
            r.contents,
            r.likes,
            r.tea_id,
            r.mem_id,
            r.create_dt,
            r.update_dt
        FROM REVIEW AS r
        INNER JOIN (
            SELECT
                review_id,
                title,
                contents,
                likes,
                tea_id,
                mem_id,
                create_dt,
                update_dt
            FROM REVIEW
            WHERE 1=1
            <if test="memId != null and memId != ''">
            AND mem_id = #{memId}
            </if>
            <if test="teaId != null and teaId != ''">
            AND tea_id = #{teaId}
            </if>
            ORDER BY create_dt DESC
            LIMIT #{page}, #{limit}
        ) temp
        ON temp.review_id = r.review_id
    </select>

    <select id="topSort" parameterType="Integer">
        SELECT
            *
        FROM REVIEW
        ORDER BY 'like' DESC
        LIMIT 0, #{value}
    </select>

    <select id="countAllReview" parameterType="Review">
        SELECT
            count(*)
        FROM REVIEW
        WHERE 1=1
        <if test="memId != null and memId != ''">
        AND mem_id = #{memId}
        </if>
        <if test="teaId != null and teaId != ''">
        AND tea_id = #{teaId}
        </if>
        ORDER BY create_dt DESC
    </select>

    <select id="findByMyReview" parameterType="Review" resultType="Review">
        SELECT
            r.review_id as id,
            r.title,
            r.contents,
            r.likes,
            r.tea_id,
            r.mem_id,
            r.create_dt,
            r.update_dt
        FROM REVIEW AS r
        INNER JOIN (
            SELECT
                review_id,
                title,
                contents,
                likes,
                tea_id,
                mem_id,
                create_dt,
                update_dt
            FROM REVIEW
            WHERE 1=1
            AND mem_id = #{memId}
            <if test="teaId != null and teaId != ''">
            AND tea_id = #{teaId}
            </if>
        ORDER BY create_dt DESC
        LIMIT #{page}, #{limit}
        ) temp
        ON temp.review_id = r.review_id
        ORDER BY create_dt DESC
    </select>

    <select id="countMyReview" parameterType="Review">
        SELECT
            count(*)
        FROM REVIEW
        WHERE 1=1
        AND mem_id = #{memId}
        <if test="teaId != null and teaId != ''">
        AND tea_id = #{teaId}
        </if>
        ORDER BY create_dt DESC
    </select>

    <update id="updateReview" parameterType="Review">
        UPDATE REVIEW
        SET
            title = IFNULL(#{title}, title),
            contents = IFNULL(#{contents}, contents),
            likes = IFNULL(#{likes}, likes)
        WHERE 1=1
        AND mem_id = #{memId}
        AND tea_id = #{teaId}
    </update>

</mapper>

