<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="store.teabliss.member.mapper.MemberMapper">

    <insert id="createMember" parameterType="Member" useGeneratedKeys="true" keyProperty="memId" keyColumn="mem_id">
        INSERT INTO MEMBER
        (
            email
            , password
            , nickname
            , role
            , provider
            , provider_id
        )
        VALUES
        (
            #{email}
            , #{password}
            , #{nickname}
            , #{role}
            , #{provider}
            , #{providerId}
        )
    </insert>

    <select id="findById" parameterType="Long">
        SELECT
            *
        FROM MEMBER
        WHERE 1=1
        AND mem_id = #{value}
    </select>

    <select id="findByEmail" parameterType="String">
        SELECT
            *
        FROM MEMBER
        WHERE 1=1
        AND email = #{value}
    </select>

    <select id="existsByEmail" parameterType="String">
        SELECT EXISTS
        (
        SELECT 1
        FROM MEMBER
        WHERE 1=1
        AND email = #{value}
        )
    </select>

    <select id="existsByNickname" parameterType="String">
        SELECT EXISTS
        (
        SELECT 1
        FROM MEMBER
        WHERE 1=1
        AND nickname = #{value}
        )
    </select>

    <select id="findByRefreshToken" parameterType="String">
        SELECT
        *
        FROM MEMBER
        WHERE 1=1
        AND refresh_token = #{value}
    </select>

    <select id="findByMembers" parameterType="Member">
        SELECT
            m.mem_id as id,
            m.nickname,
            m.address,
            m.profile,
            m.role,
            m.create_dt,
            m.update_dt
        FROM MEMBER AS m
        INNER JOIN (
            SELECT
                mem_id,
                nickname,
                address,
                profile,
                role,
                create_dt,
                update_dt
            FROM MEMBER
            WHERE 1=1
            <if test="email != null and email != ''">
            AND email = #{email}
            </if>
            <if test="nickname != null and nickname != ''">
            AND nickname = #{nickname}
            </if>
            ORDER BY create_dt DESC
            LIMIT #{page}, #{limit}
        ) temp
        ON temp.mem_id = m.mem_id
        ORDER BY create_dt DESC
    </select>

    <select id="countByMembers" parameterType="Member">
        SELECT
            count(*)
        FROM MEMBER
        WHERE 1=1
        <if test="email != null and email != ''">
        AND email = #{email}
        </if>
        <if test="nickname != null and nickname != ''">
        AND nickname = #{nickname}
        </if>
    </select>

    <update id="updateMember" parameterType="Member">
        UPDATE MEMBER
        SET
            nickname = IFNULL(#{nickname}, nickname),
            profile = IFNULL(#{profile}, profile),
            address = IFNULL(#{address}, address)
        WHERE 1=1
        AND mem_id = #{memId}
    </update>

    <update id="updatePassword" parameterType="Member">
        UPDATE MEMBER
        SET
            password = #{password}
        WHERE 1=1
        AND mem_id = #{memId}
    </update>
    
    <update id="updateRefreshToken" parameterType="Member">
        UPDATE MEMBER
        SET
           refresh_token = #{refreshToken}
        WHERE 1=1
        AND mem_id = #{memId}
    </update>
    
    <delete id="deleteMember" parameterType="String">
        DELETE FROM MEMBER
        WHERE 1=1
        AND email = #{value}
    </delete>

</mapper>